Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = F,
#row_dend_width = unit(20, "mm"),
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
#sizing and border
border = T,
width = unit(1.5, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, annotation_legend_side = "left")
}
# plot different combination of inidivudal PAMPs
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
# Load libraries to run scripts
source("./Libraries_to_load.R")
# load processed data
source("./Process_PAMP_responses.R")
# load figure colors
source("./Figure_colors.R")
# Load custom ggplot
source("./Theme_ggplot.R")
#collect row nameinformation annotation - botanical name ONLY
row.names(melted_filtered_avg_PAMP_responses) <- filtered_avg_PAMP_response$`Botanical name`
row.names(melted_alternate_maping_data) <- filtered_avg_PAMP_response$`Botanical name`
#create a customs scale to take in differential responses
my_scale_breaks <- c(0,200, 500, 1000, 5000, 20000, 50000, 100000)
colors <- RColorBrewer::brewer.pal(length(my_scale_breaks), "Reds")
my_color_scale_breaks <- circlize::colorRamp2(my_scale_breaks, colors)
##pull out row names to annotate with
citrus_realtionship_info <- as.data.frame(filtered_avg_PAMP_response[,2:3], stringsAsFactors = FALSE)
citrus_realtionship_info$`Sub-family` <- as.character(citrus_realtionship_info$`Sub-family`)
citrus_realtionship_info$Tribe <- as.character(citrus_realtionship_info$Tribe)
#citrus_realtionship_info_simplified <- citrus_realtionship_info[!duplicated(citrus_realtionship_info[,1:2]),]
sub_clustered_heatmap <- function(matrix_in, df_in){
#determine height of image & width of image
if (is.null(ncol(matrix_in)) == FALSE){
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
}
if (is.null(ncol(matrix_in)) == TRUE){
number_of_samples <- length(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(names(matrix_in)))*0.25)
}
#determine coloring
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = F,
#row_dend_width = unit(20, "mm"),
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
#sizing and border
border = T,
width = unit(1.5, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, annotation_legend_side = "left")
}
# plot different combination of inidivudal PAMPs
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
# load processed data
source("./Process_PAMP_responses.R")
#collect row nameinformation annotation - botanical name ONLY
row.names(melted_filtered_avg_PAMP_responses) <- filtered_avg_PAMP_response$`Botanical name`
row.names(melted_alternate_maping_data) <- filtered_avg_PAMP_response$`Botanical name`
# plot different combination of inidivudal PAMPs
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
sub_clustered_heatmap <- function(matrix_in, df_in){
#determine height of image & width of image
if (is.null(ncol(matrix_in)) == FALSE){
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
}
if (is.null(ncol(matrix_in)) == TRUE){
number_of_samples <- length(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(names(matrix_in)))*0.25)
}
#determine coloring
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = T,
#row_dend_width = unit(20, "mm"),
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
#sizing and border
border = T,
width = unit(1.5, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, annotation_legend_side = "left")
}
# plot different combination of inidivudal PAMPs
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
just_flg22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,2], filtered_avg_PAMP_response[,c(1,2,3,4,6)])
just_csp28 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,3], filtered_avg_PAMP_response[,c(1,2,3,4,7)])
just_clasCsp22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,4], filtered_avg_PAMP_response[,c(1,2,3,4,8)])
sub_clustered_heatmap <- function(matrix_in, df_in){
#determine height of image & width of image
if (is.null(ncol(matrix_in)) == FALSE){
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
}
if (is.null(ncol(matrix_in)) == TRUE){
number_of_samples <- length(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(names(matrix_in)))*0.25)
}
#determine coloring
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = T,
#row_dend_width = unit(20, "mm"),
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
#sizing and border
border = T,
width = unit(1.5, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, annotation_legend_side = "left", heatmap_legend_side = "left")
}
# plot different combination of inidivudal PAMPs
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
# plot different combination of inidivudal PAMPs
png("just_chitin_with_clustering.png", height = 5, width = 9, units = "in", res = 1200)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
# plot different combination of inidivudal PAMPs
png("just_chitin_with_clustering.png", height = 5, width = 12, units = "in", res = 1200)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
png("just_chitin_with_clustering.png", height = 5, width = 12, units = "in", res = 1000)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
png("just_chitin_with_clustering.png", height = 10, width = 6, units = "in", res = 1000)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
sub_clustered_heatmap <- function(matrix_in, df_in){
#determine height of image & width of image
if (is.null(ncol(matrix_in)) == FALSE){
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
}
if (is.null(ncol(matrix_in)) == TRUE){
number_of_samples <- length(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(names(matrix_in)))*0.25)
}
#determine coloring
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = T,
#row_dend_width = unit(20, "mm"),
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
#sizing and border
border = T,
width = unit(1, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, annotation_legend_side = "left", heatmap_legend_side = "left")
}
png("just_chitin_with_clustering.png", height = 11, width = 6, units = "in", res = 1000)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
# plot different combination of inidivudal PAMPs
png("just_chitin_with_clustering.png", height = 14, width = 8, units = "in", res = 1000)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
png("just_flg22_with_clustering.png", height = 14, width = 8,  units = "in", res = 1000)
just_flg22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,2], filtered_avg_PAMP_response[,c(1,2,3,4,6)])
dev.off()
png("just_csp22_with_clustering.png", height = 14, width = 8,  units = "in", res = 1000)
just_csp22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,3], filtered_avg_PAMP_response[,c(1,2,3,4,7)])
dev.off()
png("just_clascsp22_with_clustering.png", height = 14, width = 8,  units = "in", res = 1000)
just_clasCsp22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,4], filtered_avg_PAMP_response[,c(1,2,3,4,8)])
dev.off()
# load processed data
source("./Process_PAMP_responses.R")
#collect row nameinformation annotation - botanical name ONLY
row.names(melted_filtered_avg_PAMP_responses) <- filtered_avg_PAMP_response$`Botanical name`
row.names(melted_alternate_maping_data) <- filtered_avg_PAMP_response$`Botanical name`
# plot different combination of inidivudal PAMPs
png("just_chitin_by_taxonomy.png", height = 14, width = 8, units = "in", res = 1000)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
sub_clustered_heatmap <- function(matrix_in, df_in){
#determine height of image & width of image
if (is.null(ncol(matrix_in)) == FALSE){
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
}
if (is.null(ncol(matrix_in)) == TRUE){
number_of_samples <- length(matrix_in)
height_of_heatmap <- number_of_samples*0.16
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
max_char_length <<- (max(nchar(names(matrix_in)))*0.25)
}
#determine coloring
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = F,
#row_dend_width = unit(20, "mm"),
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
#sizing and border
border = T,
width = unit(1, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, annotation_legend_side = "left", heatmap_legend_side = "left")
}
png("just_chitin_by_taxonomy.png", height = 14, width = 8, units = "in", res = 1000)
just_chitin <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,1], filtered_avg_PAMP_response[,1:5])
dev.off()
png("just_flg22_by_taxonomy.png", height = 14, width = 8,  units = "in", res = 1000)
just_flg22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,2], filtered_avg_PAMP_response[,c(1,2,3,4,6)])
dev.off()
png("just_csp22_by_taxonomy.png", height = 14, width = 8,  units = "in", res = 1000)
just_csp22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,3], filtered_avg_PAMP_response[,c(1,2,3,4,7)])
dev.off()
png("just_clascsp22_by_taxonomy.png", height = 14, width = 8,  units = "in", res = 1000)
just_clasCsp22 <- sub_clustered_heatmap(melted_filtered_avg_PAMP_responses[,4], filtered_avg_PAMP_response[,c(1,2,3,4,8)])
dev.off()
# Load libraries to run scripts
source("./Libraries_to_load.R")
# load processed data
source("./Process_PAMP_responses.R")
# load figure colors
source("./Figure_colors.R")
# Load custom ggplot
source("./Theme_ggplot.R")
#collect row nameinformation annotation - botanical name ONLY
row.names(melted_filtered_avg_PAMP_responses) <- filtered_avg_PAMP_response$`Botanical name`
row.names(melted_alternate_maping_data) <- filtered_avg_PAMP_response$`Botanical name`
###create function to create automated ploting
disease_index_heatmap <- function(matrix_in, df_in){
#determine coloring - row annotation
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
show_legend =c(FALSE,FALSE),
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
#determine height of image
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.2
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
#determine width of image
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
# top annotation based on matrix info of RLUs in
ha = HeatmapAnnotation('Avg. Max RLUs' = anno_boxplot(matrix_in), height = unit(3, "cm"))
#right annotation
ra = rowAnnotation('Disease Index' = as.numeric(df_in$Disease_category),
col = list('Disease index' =circlize::colorRamp2(c(0, 8), c("green", "red"))))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = F,
#row_km = 4,
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
top_annotation = ha,
right_annotation = ra,
#sizing and border
border = T,
width = unit(1.5, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, heatmap_legend_side = "left")
}
disease_index <- subset(disease_index, disease_index$Disease_category != 'N/A')
disease_index <- disease_index[order(disease_index$Disease_category, decreasing = F),]
disease_subset_RLUs <- melted_filtered_avg_PAMP_responses[row.names(melted_filtered_avg_PAMP_responses) %in% disease_index$`Botanical name`,]
disease_index
###create function to create automated ploting
disease_index_heatmap <- function(matrix_in, df_in){
#determine coloring - row annotation
colors_subfamily <- c("Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_tribe <- c("Balsamocitrinae" = "#1F6768", "Citrinae" = "#A8C653", "Clauseninae" = "#E45D50",
"Merrilliinae" = "#544275", "Micromelinae" = "#CAA2DD", "Triphasiinae" = "#4EAEDF",
"Toddalioideae" = "#FBBE4E", "Rutoideae" = "#E3DECA", "Aurantioideae" = "#273253")
colors_subfamily_filtered <- colors_subfamily[names(colors_subfamily) %in% as.character(unique(df_in$`Sub-family`))]
colors_tribe_filtered <- colors_tribe[names(colors_tribe) %in% as.character(unique(df_in$Tribe))]
Taxon_df <- df_in[,2:3]
Taxon_df$`Sub-family` <- as.character(Taxon_df$`Sub-family`)
Taxon_df$Tribe <- as.character(Taxon_df$Tribe)
row_anno <- rowAnnotation(df = Taxon_df,
border = TRUE,
show_legend =c(FALSE,FALSE),
col = list(`Sub-family` = colors_subfamily_filtered,
Tribe = colors_tribe_filtered))
#determine height of image
number_of_samples <- nrow(matrix_in)
height_of_heatmap <- number_of_samples*0.2
if (number_of_samples > 20){
height_of_heatmap <- number_of_samples*0.14
}
#determine width of image
max_char_length <<- (max(nchar(row.names(matrix_in)))*0.25)
# top annotation based on matrix info of RLUs in
ha = HeatmapAnnotation('Avg. Max RLUs' = anno_boxplot(matrix_in), height = unit(3, "cm"))
#right annotation
ra = rowAnnotation('Disease Index' = as.numeric(df_in$Disease_category))
ht = ComplexHeatmap::Heatmap(matrix_in,
#cluster color modificaiton
col = my_color_scale_breaks,
show_heatmap_legend = c(col = FALSE),
#column modifications
cluster_columns = F,
cluster_rows = F,
#row_km = 4,
#row modifications + dendrogram
show_row_names = T,
row_names_gp = gpar(fontsize = 10),
#annotate Taxnonomy Info
left_annotation = row_anno,
top_annotation = ha,
right_annotation = ra,
#sizing and border
border = T,
width = unit(1.5, "in"),
height = unit(height_of_heatmap, "in"),
use_raster = TRUE, raster_quality = 2)
draw(ht, heatmap_legend_side = "left")
}
disease_index_heatmap(disease_subset_RLUs, disease_index)
str(disease_index)
disease_index$Disease_category <- as.numeric(disease_index$Disease_category)
str(disease_index)
disease_index_heatmap(disease_subset_RLUs, disease_index)
View(disease_index)
disease_subset_RLUs
rownames(disease_subset_RLUs)
disease_subset_RLUs[order(row.names(disease_index)),]
disease_index
disease_subset_RLUs[order(disease_index$Disease_category, decreasing = F),]
disease_subset_RLUs[disease_index$`Botanical name`,]
disease_subset_RLUs <- disease_subset_RLUs[disease_index$`Botanical name`,]
disease_index_heatmap(disease_subset_RLUs, disease_index)
png("Disease_data_subset_heatmap.png", height = 9, width = 10, units = "in", res = 1200)
disease_index_heatmap(disease_subset_RLUs, disease_index)
dev.off()
disease_index
reticulate::repl_python()
